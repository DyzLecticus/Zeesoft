<!DOCTYPE project>
<project name="ZMMT" default="dist" basedir=".">
	<description>ZMMT build file</description>

	<!-- Release version -->
	<property name="version" value="0.9.0"/>
	
	<!-- ZDK version -->
	<property name="versionZDK" value="0.9.25"/>
	<property name="releasesZDK" location="../ZDK/releases"/>

	<property name="creator" value="Andre van der Zee, Leiden, The Netherlands"/>
	
	<property name="releases" location="releases"/>
	<property name="src" location="src"/>
	<property name="lib" location="lib"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>

	<target name="copyZDK" description="Copy the ZDK release">
		<mkdir dir="${lib}"/>
		<unzip src="${releasesZDK}/zdk-${versionZDK}.zip" dest="${lib}">
		    <patternset>
		        <include name="**/*.jar"/>
		        <include name="**/*.zip"/>
		    </patternset>
		</unzip>
	</target>
	
	<target name="compile">
		<mkdir dir="${build}"/>
		<path id="libraries">
			<fileset dir="${lib}">
				<include name="**/*.jar" />
			</fileset>
		</path>
		<javac srcdir="${src}" destdir="${build}" classpathref="libraries" debug="on" includeantruntime="false"/>
	</target>

	<target name="dist" depends="compile" description="Generate the ZMMT distribution">
		<!-- Copy sources to build directory -->
		<copy todir="${build}">
            <fileset dir="${src}" />
        </copy>		
		<copy file="build.xml" tofile="${build}/build.xml"/>
		<!-- Create distribution directory -->
		<mkdir dir="${dist}"/>
		<!-- Copy dependencies -->
		<copy file="${lib}/zdk.jar" tofile="${dist}/zdk.jar"/>
		<!-- Generate manifest -->
		<exec dir="" executable="cmd" resultproperty="_error" logError="true"> 
			<arg line='/c java -jar ${lib}/zdk.jar WRITE_MANIFEST "${version} ${creator}" nl.zeesoft.zmmt.test.ZMMT src ${dist}/mymanifest zdk.jar'/>
		</exec>
		<condition property="_abort">
			<equals arg1="${_error}" arg2="1"/>
		</condition>
		<fail if="_abort" message="Failed to generate manifest"/>		
		<!-- Build jar file -->
		<jar jarfile="${dist}/zmmt.jar" basedir="${build}" manifest="dist/mymanifest"/>
		<!-- Run tests and generate README.md -->
		<exec dir="${dist}" executable="cmd" output="${dist}/README.md" resultproperty="_error" logError="true"> 
			<arg line="/c java -jar zmmt.jar ${version}"/>
		</exec>
		<condition property="_abort">
			<equals arg1="${_error}" arg2="1"/>
		</condition>
		<fail if="_abort" message="One or more tests failed"/>		
		<!-- Rebuild jar file (include README.md) -->
		<copy file="${dist}/README.md" tofile="${build}/README.md"/>
		<jar jarfile="${dist}/zmmt.jar" basedir="${build}" manifest="dist/mymanifest"/>
		<!-- Remove sources from build directory -->
		<delete>
            <fileset dir="${build}" includes="**/*.java"/>
		</delete>
	</target>

	<target name="distZT" depends="dist" description="Generate the ZeeTracker distribution">
		<mkdir dir="${build}/ZT"/>
		
		<mkdir dir="${build}/ZT/src1"/>
		<unzip src="${lib}/zdk.jar" dest="${build}/ZT/src1">
		    <patternset>
		        <include name="**/*.java"/>
		    </patternset>
		</unzip>
		
		<mkdir dir="${build}/ZT/src2"/>
		<unzip src="${dist}/zmmt.jar" dest="${build}/ZT/src2">
		    <patternset>
		        <include name="**/*.java"/>
		    </patternset>
		</unzip>

		<copy todir="${build}/ZT/src">
            <fileset dir="${build}/ZT/src1" />
        </copy>		
		<copy todir="${build}/ZT/src">
            <fileset dir="${build}/ZT/src2" />
        </copy>		

		
		<mkdir dir="${build}/ZT/build"/>
		
		<javac srcdir="${build}/ZT/src" destdir="${build}/ZT/build" debug="on" includeantruntime="false"/>

		<exec dir="" executable="cmd" resultproperty="_error" logError="true"> 
			<arg line='/c java -jar ${lib}/zdk.jar WRITE_MANIFEST "${version} ${creator}" nl.zeesoft.zmmt.ZeeTracker build/ZT/src ${dist}/mymanifest'/>
		</exec>
		<condition property="_abort">
			<equals arg1="${_error}" arg2="1"/>
		</condition>
		<fail if="_abort" message="Failed to generate manifest"/>		

		<mkdir dir="${build}/ZT/build/resources"/>
		<copy file="resources/DemoComposition.ztc" tofile="${build}/ZT/build/resources/DemoComposition.ztc"/>
		<copy file="resources/ZeeTrackerDrumKit.sf2" tofile="${build}/ZT/build/resources/ZeeTrackerDrumKit.sf2"/>
		<copy file="resources/ZeeTrackerSynthesizers.sf2" tofile="${build}/ZT/build/resources/ZeeTrackerSynthesizers.sf2"/>
		
		<jar jarfile="${dist}/ZeeTracker.jar" basedir="${build}/ZT/build" manifest="${dist}/mymanifest"/>
		
		<delete dir="${build}/ZT"/>
	</target>

	<target name="release" description="Release the ZMMT">
		<antcall target="failIfReleaseExists"/>
		<input message="Are you sure you want to release version ${version} (y/n)?" validargs="y,n" addproperty="_release"/>
		<condition property="_abort">
			<equals arg1="n" arg2="${_release}"/>
		</condition>
		<fail if="_abort" message="Aborted release"/>		
		<antcall target="releaseConfirmed"/>
	</target>

	<target name="releaseConfirmed">
		<antcall target="failIfReleaseExists"/>
		<antcall target="clean"/>
		<antcall target="dist"/>
		<antcall target="javadoc"/>
		<mkdir dir="${releases}"/>
		<mkdir dir="${releases}/${version}"/>
		<copy file="${dist}/zdk.jar" tofile="${releases}/${version}/zdk.jar"/>
		<copy file="${lib}/zdk-javadoc.zip" tofile="${releases}/${version}/zdk-javadoc.zip"/>
		<copy file="${dist}/zmmt.jar" tofile="${releases}/${version}/zmmt.jar"/>
		<copy file="${dist}/zmmt-javadoc.zip" tofile="${releases}/${version}/zmmt-javadoc.zip"/>
		<copy file="${dist}/README.md" tofile="${releases}/${version}/README.md"/>
		<zip destfile="${releases}/zmmt-${version}.zip" basedir="${releases}/${version}"/>
		<delete dir="${releases}/${version}"/>
		<copy file="${dist}/README.md" tofile="README.md"/>
	</target>
	
	<target name="javadoc" description="Generate the ZMMT documentation">
		<mkdir dir="${dist}"/>
		<mkdir dir="${dist}/src"/>
		<unzip src="${lib}/zdk.jar" dest="${dist}/src">
		    <patternset>
		        <include name="**/*.java"/>
		    </patternset>
		</unzip>
		<copy todir="${dist}/src">
            <fileset dir="${src}" />
        </copy>		
		<mkdir dir="${dist}/javadoc"/>
		<javadoc sourcepath="${dist}/src" destdir="${dist}/javadoc" failonerror="true" failonwarning="true" packagenames="nl.zeesoft.zmmt,nl.zeesoft.zmmt.composition,nl.zeesoft.zmmt.gui,nl.zeesoft.zmmt.gui.panel,nl.zeesoft.zmmt.gui.state,nl.zeesoft.zmmt.player,nl.zeesoft.zmmt.recorder,nl.zeesoft.zmmt.sequencer,nl.zeesoft.zmmt.synthesizer"/>
		<zip destfile="${dist}/zmmt-javadoc.zip" basedir="${dist}/javadoc"/>
		<delete dir="${dist}/javadoc"/>
		<delete dir="${dist}/src"/>
	</target>

	<target name="clean" description="Clean up">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>

	<target name="failIfReleaseExists">
		<condition property="_released">
			<available file="${releases}/zmmt-${version}.zip"/>
		</condition>
		<fail if="_released" message="Version ${version} has already been released"/>		
	</target>
</project>

