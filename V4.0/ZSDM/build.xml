<!DOCTYPE project>
<project name="ZSDM" default="dist" basedir=".">
	<description>ZSDM build file</description>

	<!-- Release version -->
	<property name="version" value="0.9.0"/>
	
	<!-- ZEVT version -->
	<property name="versionZEVT" value="0.9.0"/>
	<property name="releasesZEVT" location="../ZEVT/releases"/>

	<property name="creator" value="Andre van der Zee, Leiden, The Netherlands"/>
	
	<property name="releases" location="releases"/>
	<property name="src" location="src"/>
	<property name="lib" location="WebContent/WEB-INF/lib"/>
	<property name="build" location="build/build"/>
	<property name="dist" location="dist"/>

	<property name="classpath" value="nl/zeesoft/zsdm nl/zeesoft/zsdm/mod nl/zeesoft/zsdm/mod/handler nl/zeesoft/zsdm/mod/resource nl/zeesoft/zsdm/trans nl/zeesoft/zsdm/trans/entities/dutch nl/zeesoft/zsdm/trans/entities/english nl/zeesoft/zsdm/test zevt.jar zdk.jar"/>

	<target name="copyZEVT" description="Copy the ZEVT release">
		<mkdir dir="${lib}"/>
		<unzip src="${releasesZEVT}/zevt-${versionZEVT}.zip" dest="${lib}">
		    <patternset>
		        <include name="**/*.jar"/>
		        <include name="**/*.zip"/>
		    </patternset>
		</unzip>
	</target>
	
	<target name="compile">
		<mkdir dir="build"/>
		<mkdir dir="${build}"/>
		<path id="libraries">
			<fileset dir="${lib}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="C:/Zeesoft/tomcat/lib">
				<include name="**/*.jar" />
			</fileset>
		</path>
		<javac srcdir="${src}" destdir="${build}" classpathref="libraries" debug="on" includeantruntime="false">
		</javac>
	</target>

	<target name="dist" depends="compile" description="Generate the ZSDM distribution">
		<!-- Copy sources to build directory -->
		<copy todir="${build}">
            <fileset dir="${src}" />
        </copy>
		<copy file="build.xml" tofile="${build}/build.xml"/>
		<!-- Create distribution directory -->
		<mkdir dir="${dist}"/>
		<!-- Copy dependencies -->
		<copy todir="${dist}">
            <fileset dir="${lib}/" includes="**/*.jar"/>
        </copy>
		<!-- Generate manifest -->
		<manifest file="${dist}/mymanifest">
			<attribute name="Built-By" value="${version} ${creator}"/>
			<attribute name="Class-path" value="${classpath}"/>  
			<attribute name="Main-Class" value="nl.zeesoft.zsdm.test.ZSDM"/>
		</manifest>		
		<!-- Build jar file -->
		<jar jarfile="${dist}/zsdm.jar" basedir="${build}" manifest="dist/mymanifest"/>
		<!-- Run tests and generate README.md -->
		<exec dir="${dist}" executable="cmd" output="${dist}/README.md" resultproperty="_error" logError="true"> 
			<arg line="/c java -jar zsdm.jar ${version}"/>
		</exec>
		<condition property="_abort">
			<equals arg1="${_error}" arg2="1"/>
		</condition>
		<fail if="_abort" message="One or more tests failed"/>		
		<!-- Rebuild jar file (include README.md) -->
		<copy file="${dist}/README.md" tofile="${build}/README.md"/>
		<jar jarfile="${dist}/zsdm.jar" basedir="${build}" manifest="dist/mymanifest"/>
		<!-- Remove sources from build directory -->
		<delete>
            <fileset dir="${build}" includes="**/*.xml"/>
		</delete>
		<delete>
            <fileset dir="${build}" includes="**/*.md"/>
		</delete>
		<delete>
            <fileset dir="${build}" includes="**/*.java"/>
		</delete>
	</target>

	<target name="war" description="Generate the ZSDM war files">
		<input message="Are you sure you want to generate the war files (y/n)?" validargs="y,n" addproperty="_release"/>
		<condition property="_abort">
			<equals arg1="n" arg2="${_release}"/>
		</condition>
		<fail if="_abort" message="Aborted release"/>
		<delete>
            <fileset dir="build/" includes="**/*.class"/>
		</delete>
		<antcall target="clean"/>
		<antcall target="dist"/>
		<antcall target="makeWar"/>
	</target>
	
	<target name="makeWar">
		<manifest file="${dist}/warmanifest">
			<attribute name="Built-By" value="${version} ${creator}"/>
			<attribute name="Class-path" value="${classpath}"/>  
		</manifest>		
		<antcall target="devWar"/>
		<antcall target="prodWar"/>
		<copy file="${dist}/README.md" tofile="README.md"/>
	</target>

	<target name="devWar">
		<antcall target="prepareWar"/>
		<copy file="WebContent/WEB-INF/web.xml" tofile="${dist}/war/WEB-INF/web.xml"/>
		<war destfile="${releases}/zsdm-dev.war" basedir="${dist}/war" webxml="${dist}/war/WEB-INF/web.xml" manifest="${dist}/warmanifest" />
		<antcall target="finishWar"/>
	</target>
	
	<target name="prodWar">
		<antcall target="prepareWar"/>
		<copy file="WebContent/WEB-INF/web-prod.xml" tofile="${dist}/war/WEB-INF/web.xml"/>
		<war destfile="${releases}/zsdm.war" basedir="${dist}/war" webxml="${dist}/war/WEB-INF/web.xml" manifest="${dist}/warmanifest" />
		<antcall target="finishWar"/>
	</target>
	
	<target name="prepareWar">
		<mkdir dir="${dist}/war"/>
		<mkdir dir="${dist}/war/WEB-INF"/>
		<mkdir dir="${dist}/war/WEB-INF/lib"/>
		<mkdir dir="${dist}/war/META-INF"/>
		
		<copy file="build.xml" tofile="${dist}/war/build.xml"/>
		<copy file="${dist}/README.md" tofile="${dist}/war/README.md"/>
		
		<copy todir="${dist}/war/WEB-INF/lib">
	        <fileset dir="WebContent/WEB-INF/lib" includes="**/*.*"/>
	    </copy>		
	
		<!-- Copy sources to build directory -->
		<copy todir="${build}">
            <fileset dir="${src}" />
        </copy>
		
		<copy todir="${dist}/war/WEB-INF/classes">
	        <fileset dir="${build}">
				<exclude name="**/zeesoft/zsdm/test/**" />
	        </fileset>
	    </copy>		
		
		<!-- Remove sources from build directory -->
		<delete>
            <fileset dir="${build}" includes="**/*.java"/>
		</delete>
	</target>
	
	<target name="finishWar">
		<delete>
            <fileset dir="${dist}/war" includes="**/*.md"/>
		</delete>
		
		<delete>
            <fileset dir="${dist}/war/WEB-INF/" includes="**/*.xml"/>
		</delete>
		
		<!-- Remove sources from war directory -->
		<delete>
            <fileset dir="${dist}/war/WEB-INF/classes" includes="**/*.java"/>
		</delete>
	</target>

	<target name="release" description="Release the ZSDM">
		<antcall target="failIfReleaseExists"/>
		<input message="Are you sure you want to release version ${version} (y/n)?" validargs="y,n" addproperty="_release"/>
		<condition property="_abort">
			<equals arg1="n" arg2="${_release}"/>
		</condition>
		<fail if="_abort" message="Aborted release"/>		
		<antcall target="releaseConfirmed"/>
	</target>
	
	<target name="releaseConfirmed">
		<antcall target="failIfReleaseExists"/>
		<antcall target="clean"/>
		<antcall target="dist"/>
		<mkdir dir="${releases}"/>
		<mkdir dir="${releases}/${version}"/>
		<copy todir="${releases}/${version}/">
	        <fileset dir="WebContent/WEB-INF/lib" includes="**/*.*"/>
	    </copy>		
		<copy file="${dist}/zsdm.jar" tofile="${releases}/${version}/zsdm.jar"/>
		<copy file="${dist}/README.md" tofile="${releases}/${version}/README.md"/>
		<zip destfile="${releases}/zsdm-${version}.zip" basedir="${releases}/${version}"/>
		<delete dir="${releases}/${version}"/>
		<copy file="${dist}/README.md" tofile="README.md"/>
		<antcall target="clean"/>
		<antcall target="dist"/>
		<antcall target="makeWar"/>
	</target>

	<target name="clean" description="Clean up">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>

	<target name="failIfReleaseExists">
		<condition property="_released">
			<available file="${releases}/zsdm-${version}.zip"/>
		</condition>
		<fail if="_released" message="Version ${version} has already been released"/>		
	</target>
</project>
